/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package algorithm.complexity;

import java.util.Arrays;
import java.util.Random;

public class App {
    public static void main(String[] args) throws Exception {
        // bigger the algorithm
        // more time and space it will consume

        int value = 100544;

        int[] array = generateArray();
        shuffle(array);

        // ----------------------------------------
        // O(n)
        // ----------------------------------------

        new SearchExecutor(new LinearSearch()).search(value, array);

        // ----------------------------------------
        // O(log n)
        // ----------------------------------------

        // The key aspect here is that the array is already sorted.
        int[] clonedArray = array.clone();
        Arrays.sort(clonedArray);
        new SearchExecutor(new BinarySearch()).search(value, clonedArray);
    }

    private static void shuffle(int[] array) {
        final Random random = new Random();
        for (int i = 0; i < array.length; i++) {
            int index = random.nextInt(i + 1);
            int v = array[index];
            array[index] = array[i];
            array[i] = v;
        }
    }

    private static int[] generateArray() {
        int[] array = new int[10000000];
        for (int i = 0; i < array.length; i++) {
            array[i] = i+1;
        }
        return array;
    }
}
